---
- name: Check for existing lxc
  ansible.builtin.shell:
    cmd: find /etc/pve/ -name {{ lxcid.key | quote }}.conf | wc -l
  #    cmd: "find /etc/pve/{nodes/*/,}{qemu-server,lxc} -name {{ lxcid.key | quote }}.conf | wc -l"
  register: cmd_results
  changed_when: false
  tags:
    - create_lxc
  become: true
- name: "LXC create {{ lxcid.key }}"
  when: cmd_results.stdout_lines[0] == "0"
  tags:
    - create_lxc
  become: true
  block:
    - name: "Set template"
      ansible.builtin.set_fact:
        template: "{{ hostvars[inventory_hostname].roles.proxmox.templates.debian_latest | default('') }}"
    - name: "Set template"
      ansible.builtin.set_fact:
        template: "{{ hostvars[inventory_hostname].lihas_roles.proxmox.templates.debian_latest | default(template) }}"
    - name: "Set template"
      ansible.builtin.set_fact:
        template: "{{ lxcid.value.template | default(template) }}"
    - name: "Run pct create {{ lxcid.key }}"
      ansible.builtin.command: # noqa: no-changed-when
        cmd: >
          pct create {{ lxcid.key | quote }}
          {{ template | quote }}
          -rootfs {{ lxcid.value.rootfs | default('local:8') | quote }}
          -cmode {{ lxcid.value.cmode | default('shell') | quote }}
          -memory {{ lxcid.value.memory | default(2048) | quote }}
          -swap {{ lxcid.value.swap | default(lxcid.value.memory | default(2048) | quote) }}
          -features '{{ lxcid.value.features | default("nesting=1") | quote }}'
          -hostname {{ lxcid.value.hostname | default('lxc') | quote }}
          -unprivileged {{ lxcid.value.unprivileged | default(1) | quote }}
          -onboot {{ lxcid.value.onboot | default(0) | quote }}
          -ssh-public-keys /etc/pve/priv/authorized_keys
          {% if lxcid.value.pool is defined %} -pool {{ lxcid.value.pool }}{% endif %}
          {% if lxcid.value.nameserver is defined %} -nameserver '{{ lxcid.value.nameserver }}'{% endif %}
    - name: "Run pct set mp for {{ lxcid.key }}"
      ansible.builtin.command: # noqa: no-changed-when
        cmd: pct set {{ lxcid.key | quote }} -mp{{ mpidx | quote }} {{ lxcid.value.mp[mpidx] | quote }}
      loop: "{{ lxcid.value.mp }}"
      loop_control:
        loop_var: dummy
        index_var: mpidx
      when: ( lxcid.value.mp is defined )
    - name: "Run pct set net for {{ lxcid.key }}"
      ansible.builtin.command: # noqa: no-changed-when
        cmd: pct set {{ lxcid.key | quote }} -net{{ netidx | quote }} {{ lxcid.value.net[netidx] | quote }}
      loop: "{{ lxcid.value.net }}"
      loop_control:
        loop_var: dummy
        index_var: netidx
      when: ( lxcid.value.net is defined )
    # TODO: won't work as PVE doesn't allow updating the file in the manner lineinfile tries to do it
    #    - ansible.builtin.lineinfile:
    #        firstmatch: true
    #        insertafter: "^hostname:"
    #        regexp: "^{{ pctextra }}$"
    #        line: "{{ pctextra }}"
    #        path: "/etc/pve/lxc/{{ lxcid.key }}.conf"
    #        unsafe_writes: true
    #      loop: "{{ lxcid.value.pct_extra }}"
    #      loop_control:
    #        loop_var: pctextra
    #        index_var: pctidx
    #      when: ( lxcid.value.pct_extra is defined )
    - name: "Run pct start {{ lxcid.key }}"
      ansible.builtin.command: # noqa: no-changed-when
        cmd: pct start {{ lxcid.key | quote }}
      when: ( lxcid.value.start is defined and lxcid.value.start==1 )
